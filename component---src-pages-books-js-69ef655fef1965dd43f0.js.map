{"version":3,"sources":["webpack://notion-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://notion-blog/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://notion-blog/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://notion-blog/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://notion-blog/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://notion-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://notion-blog/./node_modules/notabase/src/utils.js","webpack://notion-blog/./node_modules/url/node_modules/punycode/punycode.js","webpack://notion-blog/./node_modules/url/node_modules/querystring/decode.js","webpack://notion-blog/./node_modules/url/node_modules/querystring/encode.js","webpack://notion-blog/./node_modules/url/node_modules/querystring/index.js","webpack://notion-blog/./node_modules/url/url.js","webpack://notion-blog/./node_modules/url/util.js","webpack://notion-blog/./src/components/bookItem.js","webpack://notion-blog/./src/pages/books.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","NOTION_BASE_URL","isPageId","text","re","RegExp","getBlockHashId","blockId","split","join","getFullBlockId","match","substr","getBrowseableUrl","blockID","concat","getUrlPageId","url","pUrl","process","browser","URL","parse","pathList","pathname","parseImageUrl","width","rUrl","startsWith","_url$split","parsedOriginUrl","encodeURIComponent","replace","root","nodeType","freeGlobal","g","global","window","self","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","result","mapDomain","string","parts","ucs2decode","extra","output","counter","charCodeAt","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","decode","input","out","basic","j","index","oldi","w","t","baseMinusT","codePoint","inputLength","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toLowerCase","hasOwnProperty","obj","prop","qs","sep","eq","options","regexp","maxKeys","kstr","vstr","v","x","idx","indexOf","decodeURIComponent","stringifyPrimitive","isFinite","keys","ks","stringify","util","Url","this","protocol","slashes","auth","host","port","hostname","hash","search","query","path","href","urlParse","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","isString","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","l","part","newpart","validParts","notHost","bit","unshift","toASCII","p","h","ae","esc","escape","qm","s","format","charAt","resolve","relative","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","arg","data","title","cover","comment","posts","bookCoverURL","style","display","src","alt","post","slug","to","allBooks","nodes","node"],"mappings":"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","file":"component---src-pages-books-js-69ef655fef1965dd43f0.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _slicedToArray = require(\"/home/runner/work/notion-blog/notion-blog/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar NOTION_BASE_URL = \"https://www.notion.so\";\n\nvar isPageId = function isPageId(text) {\n  var re = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$');\n  return text.length === 36 && re.test(text);\n};\n\nvar getBlockHashId = function getBlockHashId(blockId) {\n  return blockId.split('-').join('');\n};\n\nvar getFullBlockId = function getFullBlockId(blockId) {\n  if (blockId.match(\"^[a-zA-Z0-9]+$\")) {\n    return blockId.substr(0, 8) + \"-\" + blockId.substr(8, 4) + \"-\" + blockId.substr(12, 4) + \"-\" + blockId.substr(16, 4) + \"-\" + blockId.substr(20, 32);\n  } else {\n    return blockId;\n  }\n};\n\nvar getBrowseableUrl = function getBrowseableUrl(blockID) {\n  return \"\".concat(NOTION_BASE_URL, \"/\").concat(blockID.split('-').join(''));\n};\n\nvar getUrlPageId = function getUrlPageId(url) {\n  var pUrl;\n\n  if (!process.browser) {\n    var parse = require('url').parse;\n\n    pUrl = parse(url);\n  } else {\n    pUrl = new URL(url);\n  }\n\n  var pathList = pUrl.pathname.split('/');\n  var pagId = pathList[pathList.length - 1];\n  return pagId;\n};\n\nvar parseImageUrl = function parseImageUrl(url, width) {\n  var rUrl;\n\n  if (url.startsWith(\"https://s3\")) {\n    var _url$split = url.split(\"?\"),\n        _url$split2 = _slicedToArray(_url$split, 1),\n        parsedOriginUrl = _url$split2[0];\n\n    rUrl = \"\".concat(NOTION_BASE_URL, \"/image/\").concat(encodeURIComponent(parsedOriginUrl).replace(\"s3.us-west\", \"s3-us-west\"));\n  } else if (url.startsWith(\"/image\")) {\n    rUrl = \"\".concat(NOTION_BASE_URL).concat(url);\n  } else {\n    rUrl = url;\n  }\n\n  if (width) {\n    return \"\".concat(rUrl, \"?width=\").concat(width);\n  } else {\n    return rUrl;\n  }\n};\n\nmodule.exports = {\n  isPageId: isPageId,\n  getBlockHashId: getBlockHashId,\n  getFullBlockId: getFullBlockId,\n  getBrowseableUrl: getBrowseableUrl,\n  getUrlPageId: getUrlPageId,\n  parseImageUrl: parseImageUrl\n};","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * http://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.3.2',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; // If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function (qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n  var maxKeys = 1000;\n\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count\n\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr,\n        vstr,\n        k,\n        v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar stringifyPrimitive = function stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function (k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function (v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\n};","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar punycode = require('punycode');\n\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\nunsafeProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n},\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  } // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n\n\n  var queryIndex = url.indexOf('?'),\n      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n  var rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) hostEnd = rest.length;\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host; // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  } // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n\n\n  if (!unsafeProtocol[lowerProto]) {\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) continue;\n      var esc = encodeURIComponent(ae);\n\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n\n      rest = rest.split(ae).join(esc);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n\n  if (rest) this.pathname = rest;\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  } //to support http.request\n\n\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  } // finally, reconstruct the href based on what has been validated.\n\n\n  this.href = this.format();\n  return this;\n}; // format a parsed object into a url string\n\n\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || query && '?' + query || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  } // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n\n\n  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.\n\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  } // hrefs like //foo/bar always cut to the protocol.\n\n\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') result[rkey] = relative[rkey];\n    } //urlParse appends trailing / to urls like http://www.example.com\n\n\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n\n      while (relPath.length && !(relative.host = relPath.shift())) {\n        ;\n      }\n\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port; // to support http.request\n\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);\n    }\n\n    result.host = '';\n\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);\n      }\n\n      relative.host = null;\n    }\n\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath; // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n\n    result.search = relative.search;\n    result.query = relative.query; //to support http.request\n\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null; //to support http.request\n\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n\n    result.href = result.format();\n    return result;\n  } // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n\n\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n\n  var up = 0;\n\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back\n\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || result.host && srcPath.length;\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  } //to support request.http\n\n\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) this.hostname = host;\n};","'use strict';\n\nmodule.exports = {\n  isString: function isString(arg) {\n    return typeof arg === 'string';\n  },\n  isObject: function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  },\n  isNull: function isNull(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n};","import React from \"react\"\nimport { parseImageUrl } from 'notabase/src/utils'\nimport { Link } from \"gatsby\";\n\nexport default ({ data }) => {\n    const { title, cover, comment, posts } = data\n\n    let bookCoverURL = parseImageUrl(cover[0], 150)\n    return (\n        <div style={{\n            display: 'flex',\n        }}>\n            <img src={bookCoverURL} alt={title} />\n            <div>\n                <h3>{title}</h3>\n                <p>{comment}</p>\n                {\n                    posts && posts.map(post => {\n                        const { slug, title } = post\n                        return <Link to={`/posts/${slug}`}>{title}</Link>\n                    })\n                }\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport BookItem from \"../components/bookItem\"\n\nconst Books = ({ data }) => (\n  <Layout>\n    <SEO title=\"My Books\" />\n    {\n      data.allBooks.nodes.map(node => <BookItem data={node} />)\n    }\n  </Layout>\n)\n\nexport default Books\nexport const query = graphql`\n  query {\n    allBooks(filter: {title: {ne: null}}) {\n      nodes {\n        cover\n        comment\n        slug\n        title\n        posts {\n          title\n          slug\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}